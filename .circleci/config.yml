version: 2
jobs:
  build:
    # parallelism: 3
    docker:
      - image: circleci/ruby:2.7.0
        environment:
          BUNDLE_JOBS: "3"
          BUNDLE_RETRY: "3"
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test

      - image: circleci/postgres:10.1
        environment:
          POSTGRES_USER: "postgres"
          # POSTGRES_DB: "myapp_development"
          POSTGRES_PASSWORD: "password"
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-compose-v1-{{ checksum "~/docker-compose" }}
            - docker-compose-v1

      - run:
         name: Install Docker Compose
         command: |
           curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
           chmod +x ~/docker-compose
           sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - save_cache:
          key: docker-compose-v1-{{ checksum "~/docker-compose" }}
          paths:
            - ~/docker-compose

      - run:
          name: Select Bundler
          command: bundle -v

      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: bundle install
          command: |
            sudo docker-compose run web bundle install

      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            sudo docker-compose run web bin/rails db:schema:load --trace

      # - run:
      #     name: Run rspec in parallel
      #     command: |
      #       bundle exec rspec --profile 10 \
      #                         --format RspecJunitFormatter \
      #                         --out test_results/rspec.xml \
      #                         --format progress \
      #                         $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results

  rubocop:
    docker:
      - image: circleci/ruby:2.7.0
    steps:
      - checkout
      - setup_remote_docker

      - restore_cache:
          keys:
            - docker-compose-v1-{{ checksum "~/docker-compose" }}
            - docker-compose-v1

      - run:
         name: Install Docker Compose
         command: |
           curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
           chmod +x ~/docker-compose
           sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - save_cache:
          key: docker-compose-v1-{{ checksum "~/docker-compose" }}
          paths:
            - ~/docker-compose

      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: bundle install
          command: |
            sudo docker-compose run web bundle install

      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Rubocop
          command: |
            sudo docker-compose run web bundle exec rubocop

  proto-lint:
    docker:
      - image: circleci/golang:1.11.4
        environment:
          GO111MODULE: "on"
    steps:
      - checkout
      - run:
          name: Enforce Protocol Buffer style and conventions.
          command: |
            cd protobuf/
            go get -u -v github.com/yoheimuta/protolint/cmd/pl
            pl lint .

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - rubocop
      - proto-lint
